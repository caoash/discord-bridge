{"ast":null,"code":"var _jsxFileName = \"/home/caoash/Documents/vscode-projects/clown-bot-jr/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport io from \"socket.io-client\";\nimport \"react-chat-elements/dist/main.css\";\nimport { MessageBox, ChatItem } from \"react-chat-elements\";\nimport { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const socket = useRef(null);\n  const [display, setDisplay] = useState([]);\n  const [text, setText] = useState(\"\");\n\n  const addMessage = message => {\n    let cur = display.slice();\n    cur.reverse();\n    cur.push( /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 14\n    }, this));\n    cur.reverse();\n    setDisplay(cur);\n  };\n\n  console.log(display);\n  useEffect(() => {\n    socket.current = io.connect(\"http://localhost:3006/\");\n    return () => {\n      socket.current.disconnect();\n    };\n  }, []);\n  useEffect(() => {\n    socket.current.on('receiveMessage', message => {\n      console.log(message);\n      addMessage(message);\n    });\n    return () => {\n      socket.current.off('receiveMessage');\n    };\n  }, [display]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [display, /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"input\",\n        className: \"nohover\",\n        onChange: e => {\n          setText(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"XdET36iqoRkKrVxVCL/qu86IY9w=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/caoash/Documents/vscode-projects/clown-bot-jr/frontend/src/App.js"],"names":["io","MessageBox","ChatItem","useState","useEffect","useRef","App","socket","display","setDisplay","text","setText","addMessage","message","cur","slice","reverse","push","console","log","current","connect","disconnect","on","off","e","target","value"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,EAAP,MAAe,kBAAf;AACA,OAAO,mCAAP;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAoC,qBAApC;AAEA,SAAQC,QAAR,EAAkBC,SAAlB,EAA6BC,MAA7B,QAA0C,OAA1C;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,MAAM,GAAGF,MAAM,CAAC,IAAD,CAArB;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMS,UAAU,GAAIC,OAAD,IAAa;AAC9B,QAAIC,GAAG,GAAGN,OAAO,CAACO,KAAR,EAAV;AACAD,IAAAA,GAAG,CAACE,OAAJ;AACAF,IAAAA,GAAG,CAACG,IAAJ,eAAS;AAAG,MAAA,SAAS,EAAG,MAAf;AAAA,gBAAuBJ;AAAvB;AAAA;AAAA;AAAA;AAAA,YAAT;AACAC,IAAAA,GAAG,CAACE,OAAJ;AACAP,IAAAA,UAAU,CAACK,GAAD,CAAV;AACD,GAND;;AAQAI,EAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,MAAM,CAACa,OAAP,GAAiBpB,EAAE,CAACqB,OAAH,CAAW,wBAAX,CAAjB;AACA,WAAO,MAAM;AACXd,MAAAA,MAAM,CAACa,OAAP,CAAeE,UAAf;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;AAOAlB,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,MAAM,CAACa,OAAP,CAAeG,EAAf,CAAkB,gBAAlB,EAAqCV,OAAD,IAAa;AAC/CK,MAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AACAD,MAAAA,UAAU,CAACC,OAAD,CAAV;AACD,KAHD;AAIA,WAAO,MAAM;AACXN,MAAAA,MAAM,CAACa,OAAP,CAAeI,GAAf,CAAmB,gBAAnB;AACD,KAFD;AAGD,GARQ,EAQN,CAAChB,OAAD,CARM,CAAT;AAUA,sBACE;AAAK,IAAA,SAAS,EAAG,WAAjB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,iBACGA,OADH,eAEE;AAAU,QAAA,IAAI,EAAG,OAAjB;AAAyB,QAAA,SAAS,EAAG,SAArC;AAA+C,QAAA,QAAQ,EAAKiB,CAAD,IAAO;AAACd,UAAAA,OAAO,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AAAwB;AAA3F;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAI,MAAM,CAAE;AAA3B;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAzCD;;GAAMrB,G;;KAAAA,G;AA2CN,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport io from \"socket.io-client\";\nimport \"react-chat-elements/dist/main.css\";\nimport { MessageBox, ChatItem} from \"react-chat-elements\";\n\nimport {useState, useEffect, useRef} from 'react';\n\nconst App = () => {\n  const socket = useRef(null);\n  const [display, setDisplay] = useState([]);\n  const [text, setText] = useState(\"\");\n\n  const addMessage = (message) => {\n    let cur = display.slice();\n    cur.reverse();\n    cur.push(<p className = \"font\">{message}</p>)\n    cur.reverse();\n    setDisplay(cur);\n  }\n\n  console.log(display);\n\n  useEffect(() => {\n    socket.current = io.connect(\"http://localhost:3006/\");\n    return () => {\n      socket.current.disconnect(); \n    }\n  }, []);\n\n  useEffect(() => {\n    socket.current.on('receiveMessage', (message) => {\n      console.log(message);\n      addMessage(message);\n    });\n    return () => {\n      socket.current.off('receiveMessage');\n    }\n  }, [display]);\n\n  return (\n    <div className = \"container\">\n      <div className=\"App\">\n        {display}\n        <textarea type = \"input\" className = \"nohover\" onChange = {(e) => {setText(e.target.value)}}/>\n        <button onClick = {() => {}} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}